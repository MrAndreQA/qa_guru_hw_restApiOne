plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "8.4"
}

repositories {
    mavenCentral()
}

def jacksonVersion = "2.16.1",
    restAssuredVersion = "5.4.0",
    allureVersion = "2.21.0",
    junitVersion = "5.10.1"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            'org.slf4j:slf4j-simple:2.0.9',
            'org.assertj:assertj-core:3.24.2',

            'com.codeborne:selenide:6.19.1',

            'io.qameta.allure:allure-selenide:2.21.0',

            "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion",
            "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion",
            "com.fasterxml.jackson.core:jackson-core:$jacksonVersion",
            "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion",
            "org.aeonbits.owner:owner:1.0.4",
            "org.selenide:selenide-selenoid:2.3.4"
    )
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperty "file.encoding", "UTF-8"
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}